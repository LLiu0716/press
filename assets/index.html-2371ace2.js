import { _ as _export_sfc, N as resolveComponent, p as openBlock, q as createElementBlock, R as createBaseVNode, v as createTextVNode, O as createVNode, a2 as createStaticVNode } from "./framework-c611892d.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="前端项目规范化工具配置" tabindex="-1"><a class="header-anchor" href="#前端项目规范化工具配置" aria-hidden="true">#</a> 前端项目规范化工具配置</h1><blockquote><p>代码规范统一对于多人开发的项目好处非常多</p><p>哪怕是自己一个人开发, 也能在很久后重新打开代码时的格式还是当年的样子</p><p>规范化工具非常多, 也有个很现实的问题, 版本, 随着时间的推移, 会出现多个不同的版本</p><p>有些配置没变, 有些却变的不一样了</p><p>当前是 2022/08/19 13:46, 记录自己的配置过程</p></blockquote><h2 id="用到的工具" tabindex="-1"><a class="header-anchor" href="#用到的工具" aria-hidden="true">#</a> 用到的工具</h2><ul><li><code>typescript</code></li><li><code>eslint</code></li><li><code>prettier</code></li><li><code>husky</code></li><li><code>lint-staged</code></li><li><code>commitlint</code></li><li><code>committzen</code></li></ul><h2 id="生成package-json文件" tabindex="-1"><a class="header-anchor" href="#生成package-json文件" aria-hidden="true">#</a> 生成<code>package.json</code>文件</h2><blockquote><p>直接写, 或者使用命令直接生成, 这里使用命令生成一个默认配置</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> init <span class="token parameter variable">-y</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>', 7);
const _hoisted_8 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  '"type": "module"',
  -1
  /* HOISTED */
);
const _hoisted_9 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "package.json",
  -1
  /* HOISTED */
);
const _hoisted_10 = {
  href: "https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_11 = /* @__PURE__ */ createStaticVNode('<h2 id="typescript" tabindex="-1"><a class="header-anchor" href="#typescript" aria-hidden="true">#</a> <code>typescript</code></h2><blockquote><p><code>ts</code> 作为 <code>js</code> 的超集, 在代码规范上起到了很好的补充作用</p></blockquote><h4 id="安装-ts" tabindex="-1"><a class="header-anchor" href="#安装-ts" aria-hidden="true">#</a> 安装<code> ts</code></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> typescript\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="生成tsconfig-json" tabindex="-1"><a class="header-anchor" href="#生成tsconfig-json" aria-hidden="true">#</a> 生成<code>tsconfig.json</code></h4><blockquote><p>可以直接使用第 3 步的代码</p></blockquote><ol><li>到<code>package.json</code>添加命令</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;tsc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tsc init&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>使用命令</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run tsc\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>修改<code>tsconfig.json</code></li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;rootDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;src&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ESNext&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ESNext&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;ESNext&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DOM&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;WebWorker&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;outDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dist&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;sourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;declaration&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;declarationDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dist/types&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;skipLibCheck&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;forceConsistentCasingInFileNames&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Node&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;src/**/*&quot;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 12);
const _hoisted_23 = {
  href: "https://www.tslang.cn/docs/handbook/tsconfig-json.html",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_24 = /* @__PURE__ */ createStaticVNode('<p>这时可以创建一个<code> ts</code> 文件到<code>src</code>文件夹下 , 试试 <code>typescript </code>是否生效</p><p><code>src/index.ts</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> main <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> a <span class="token operator">-</span> b\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>添加命令</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tsc --watch&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>查看 <code>dist</code> 文件夹</p></li><li><p>得到一个 <code>index.js</code> 文件</p></li><li><p>得到一个 <code>index.js.map</code> 文件</p></li><li><p>得到一个 <code>types/index.d.ts</code> 文件</p></li></ul><h2 id="eslint" tabindex="-1"><a class="header-anchor" href="#eslint" aria-hidden="true">#</a> <code>eslint</code></h2><blockquote><p>就不再多介绍这个工具的作用了, 会有非常多关于它作用的介绍</p></blockquote><h3 id="痛点" tabindex="-1"><a class="header-anchor" href="#痛点" aria-hidden="true">#</a> 痛点</h3><ul><li>会和 <code>prettier</code> 冲突</li></ul><h3 id="用到的包" tabindex="-1"><a class="header-anchor" href="#用到的包" aria-hidden="true">#</a> 用到的包</h3><blockquote><p>这里是指一般的项目中会用到的包</p></blockquote><table><thead><tr><th style="text-align:center;">包名</th><th style="text-align:center;">当前使用版本</th></tr></thead><tbody><tr><td style="text-align:center;"><code>eslint</code></td><td style="text-align:center;">8.22.0</td></tr><tr><td style="text-align:center;"><code>eslint-config-standard-with-typescript</code></td><td style="text-align:center;">22.0.0</td></tr><tr><td style="text-align:center;"><code>eslint-plugin-import</code></td><td style="text-align:center;">2.26.0</td></tr><tr><td style="text-align:center;"><code>eslint-plugin-n</code></td><td style="text-align:center;">15.2.4</td></tr><tr><td style="text-align:center;"><code>eslint-plugin-promise</code></td><td style="text-align:center;">6.0.0</td></tr></tbody></table><h3 id="配置方法" tabindex="-1"><a class="header-anchor" href="#配置方法" aria-hidden="true">#</a> 配置方法</h3><blockquote><p>可以直接使用第 2 步的代码</p></blockquote>', 15);
const _hoisted_39 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "eslint",
  -1
  /* HOISTED */
);
const _hoisted_40 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "eslint",
  -1
  /* HOISTED */
);
const _hoisted_41 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "eslint",
  -1
  /* HOISTED */
);
const _hoisted_42 = {
  href: "https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_43 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  ".cjs",
  -1
  /* HOISTED */
);
const _hoisted_44 = /* @__PURE__ */ createStaticVNode('<blockquote><p>差异请百度: <code>es</code> 和 <code>commonjs</code> 的差异</p></blockquote><ul><li><p>使用命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i eslint <span class="token parameter variable">-D</span>\nnpx eslint <span class="token parameter variable">--init</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>根据提示一步步选择</p></li></ul><ol start="2"><li>修改自动生成/自己创建的<code>.eslintrc.cjs</code>文件</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&#39;@typescript-eslint/parser&#39;</span><span class="token punctuation">,</span>\n  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;standard&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;eslint-config-standard-with-typescript&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span> <span class="token string">&#39;latest&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">&#39;module&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">project</span><span class="token operator">:</span> <span class="token string">&#39;./tsconfig.json&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@typescript-eslint&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>这时可以试试 <code>eslint</code> 是否生效</li></ol><ul><li>添加命令</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint src --ext .js,.ts --cache --fix&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>运行命令</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run lint\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>得到 <code>eslint</code> 报错 <code>&#39;main&#39; is assigned a value but never used </code></p></blockquote><h2 id="prettier" tabindex="-1"><a class="header-anchor" href="#prettier" aria-hidden="true">#</a> <code>prettier</code></h2><table><thead><tr><th style="text-align:center;">包名</th><th style="text-align:center;">当前使用版本</th></tr></thead><tbody><tr><td style="text-align:center;"><code>prettier</code></td><td style="text-align:center;">8.22.0</td></tr><tr><td style="text-align:center;"><code>eslint-config-prettier</code></td><td style="text-align:center;">8.5.0</td></tr><tr><td style="text-align:center;"><code>eslint-plugin-prettier</code></td><td style="text-align:center;">4.2.1</td></tr></tbody></table><blockquote><p>代码格式化工具</p><p>能快速保存并格式化代码, 作用和<code>eslint</code>有部分重叠</p></blockquote><ol><li>安装包</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> prettier eslint-config-prettier eslint-plugin-prettier\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>添加配置文件<code>.prettierrc.json</code></li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;semi&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;singleQuote&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;trailingComma&quot;</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>修改 <code>.eslintrc.cjs</code>文件</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">parser</span><span class="token operator">:</span> <span class="token string">&#39;@typescript-eslint/parser&#39;</span><span class="token punctuation">,</span>\n<span class="token operator">-</span> <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;standard&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;eslint-config-standard-with-typescript&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token operator">+</span> <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;standard&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;eslint-config-standard-with-typescript&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;prettier&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span> <span class="token string">&#39;latest&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">sourceType</span><span class="token operator">:</span> <span class="token string">&#39;module&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">project</span><span class="token operator">:</span> <span class="token string">&#39;./tsconfig.json&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token operator">-</span> plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@typescript-eslint&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token operator">+</span> plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@typescript-eslint&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;prettier&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token operator">-</span> rules<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token operator">+</span> rules<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">&#39;prettier/prettier&#39;</span><span class="token operator">:</span> <span class="token number">2</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>代码中默认格式化工具选择 <code>prettier</code> 并格式化代码</li></ol><h2 id="husky" tabindex="-1"><a class="header-anchor" href="#husky" aria-hidden="true">#</a> <code>husky</code></h2><table><thead><tr><th style="text-align:center;">包名</th><th style="text-align:center;">当前使用版本</th></tr></thead><tbody><tr><td style="text-align:center;"><code>husky</code></td><td style="text-align:center;">8.0.1</td></tr><tr><td style="text-align:center;"><code>lint-staged</code></td><td style="text-align:center;">13.0.3</td></tr></tbody></table><p>安装包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i husky lint-staged <span class="token parameter variable">-D</span>\nnpx husky <span class="token function">install</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>自动得到一个 <code>.husky</code> 文件</p></li><li><p>在 <code>.husky</code> 文件夹下创建 <code>pre-commit</code> 和 <code>commit-msg</code> 钩子文件</p></li></ul><p><code>.husky/commit-msg</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx <span class="token parameter variable">--no</span> -- commitlint <span class="token parameter variable">--edit</span> <span class="token variable">$1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>.husky/pre-commit</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx <span class="token parameter variable">--no</span> -- lint-staged\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>在<code>package.json</code>添加配置文件</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;lint-staged&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;*.{js,ts}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;prettier --write&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;eslint --fix&quot;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这样提交就会自动格式化代码, 还可以加入其他命令, 例如知道测试命令</p><p><code>lint-staged</code>只对修改的文件起作用</p></blockquote><h2 id="commitlint-and-commitizen" tabindex="-1"><a class="header-anchor" href="#commitlint-and-commitizen" aria-hidden="true">#</a> <code>commitlint</code> and <code>commitizen</code></h2><blockquote><p>统一代码提交格式</p></blockquote><table><thead><tr><th style="text-align:center;">包名</th><th style="text-align:center;">当前使用版本</th></tr></thead><tbody><tr><td style="text-align:center;"><code>@commitlint/cli</code></td><td style="text-align:center;">17.0.3</td></tr><tr><td style="text-align:center;"><code>@commitlint/config-conventional</code></td><td style="text-align:center;">17.0.3</td></tr><tr><td style="text-align:center;"><code>commitizen</code></td><td style="text-align:center;">4.2.5</td></tr></tbody></table><p>安装包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> @commitlint/cli @commitlint/config-conventional commitizen\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="这里会有-2-套配置-推荐使用-angular-团队规范的-preset" tabindex="-1"><a class="header-anchor" href="#这里会有-2-套配置-推荐使用-angular-团队规范的-preset" aria-hidden="true">#</a> 这里会有 2 套配置 , 推荐使用 <code>Angular</code> 团队规范的 preset</h3><ul><li>添加配置文件 <code>commitlint.config.cjs</code> 到根文件夹</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@commitlint/config-conventional&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cz&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">&#39;subject-case&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;never&#39;</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="angular-团队规范的-preset-配置方法" tabindex="-1"><a class="header-anchor" href="#angular-团队规范的-preset-配置方法" aria-hidden="true">#</a> <code>Angular</code> 团队规范的 preset 配置方法</h4><table><thead><tr><th style="text-align:center;">包名</th><th style="text-align:center;">当前使用版本</th></tr></thead><tbody><tr><td style="text-align:center;"><code>cz-conventional-changelog</code></td><td style="text-align:center;">3.3.0</td></tr></tbody></table><blockquote><p>纯英文, 对英语不好的同学不太友好</p></blockquote><ol><li>安装包</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> cz-conventional-changelog\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>添加配置到<code>package.json</code>文件</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint src --ext .js,.ts --cache --fix&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;commit&quot;</span><span class="token operator">:</span> <span class="token string">&quot;git cz&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;config&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;commitizen&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node_modules/cz-conventional-changelog&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>使用命令并填写相对应的参数, 如同邮件般填写 <code>commit</code></li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run commit\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="自定义-preset-配置方法" tabindex="-1"><a class="header-anchor" href="#自定义-preset-配置方法" aria-hidden="true">#</a> 自定义 preset 配置方法</h4>', 50);
const _hoisted_94 = {
  href: "https://cz-git.qbb.sh/zh/guide/introduction.html",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_95 = /* @__PURE__ */ createBaseVNode(
  "code",
  null,
  "cz-git",
  -1
  /* HOISTED */
);
const _hoisted_96 = /* @__PURE__ */ createStaticVNode('<table><thead><tr><th style="text-align:center;">包名</th><th style="text-align:center;">当前使用版本</th></tr></thead><tbody><tr><td style="text-align:center;"><code>cz-git</code></td><td style="text-align:center;">1.3.10</td></tr><tr><td style="text-align:center;"><code>cz-cli</code></td><td style="text-align:center;">1.3.10</td></tr><tr><td style="text-align:center;"><code>conventional-changelog-lint-config-cz</code></td><td style="text-align:center;">0.3.0</td></tr><tr><td style="text-align:center;"><code>commitlint-config-cz</code></td><td style="text-align:center;">0.13.3</td></tr></tbody></table><ol><li>安装包</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> cz-git cz-cli conventional-changelog-lint-config-cz commitlint-config-cz\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>添加配置文件 <code>cz.config.cjs</code> 到根文件夹</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">types</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;feat&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;feat:     新增功能 | A new feature&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;fix&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;fix:      修复缺陷 | A bug fix&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;docs&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;docs:     文档更新 | Documentation only changes&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;style:    代码格式 | Changes that do not affect the meaning of the code&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;refactor&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;refactor: 代码重构 | A code change that neither fixes a bug nor adds a feature&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;perf&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;perf:     性能提升 | A code change that improves performance&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;test:     测试相关 | Adding missing tests or correcting existing tests&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;ci&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ci:       持续集成 | Changes to our CI configuration files and scripts&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;revert&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;revert:   回退代码 | Revert to a commit&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;chore&#39;</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;chore:    其他修改 | Other changes that do not modify src or test files&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n  <span class="token literal-property property">messages</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;选择你要提交的类型 :&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">scope</span><span class="token operator">:</span> <span class="token string">&#39;选择一个提交范围（可选）:&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">customScope</span><span class="token operator">:</span> <span class="token string">&#39;请输入自定义的提交范围 :&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">subject</span><span class="token operator">:</span> <span class="token string">&#39;填写简短精炼的变更描述 :\\n&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">&#39;填写更加详细的变更描述（可选）。使用 &quot;|&quot; 换行 :\\n&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">breaking</span><span class="token operator">:</span> <span class="token string">&#39;列举非兼容性重大的变更（可选）。使用 &quot;|&quot; 换行 :\\n&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">footer</span><span class="token operator">:</span> <span class="token string">&#39;列举关联issue (可选) 例如: #31, #I3244 :\\n&#39;</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">confirmCommit</span><span class="token operator">:</span> <span class="token string">&#39;是否提交或修改commit ? (Y/N)&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token literal-property property">allowCustomScopes</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">allowCustomIssuePrefixs</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">allowEmptyIssuePrefixs</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">subjectLimit</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">emptyScopesAlias</span><span class="token operator">:</span> <span class="token string">&#39;跳过&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">defaultBody</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">defaultScope</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">defaultSubject</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">customScopesAlias</span><span class="token operator">:</span> <span class="token string">&#39;以上都不是？我要自定义&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">allowBreakingChanges</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;feat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;fix&#39;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>', 5);
const _hoisted_101 = {
  href: "https://cz-git.qbb.sh/zh/config/",
  target: "_blank",
  rel: "noopener noreferrer"
};
const _hoisted_102 = /* @__PURE__ */ createStaticVNode('<ol start="3"><li>添加配置到<code>package.json</code>文件</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint src --ext .js,.ts --cache --fix&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;commit&quot;</span><span class="token operator">:</span> <span class="token string">&quot;git cz&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;config&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;commitizen&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node_modules/cz-git&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;czConfig&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cz.config.cjs&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>使用命令并填写相对应的参数, 如同邮件般填写 <code>commit</code></li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run commit\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>', 4);
function _sfc_render(_ctx, _cache) {
  const _component_ExternalLinkIcon = resolveComponent("ExternalLinkIcon");
  return openBlock(), createElementBlock("div", null, [
    _hoisted_1,
    createBaseVNode("p", null, [
      createTextVNode("这里添加 "),
      _hoisted_8,
      createTextVNode(" 到"),
      _hoisted_9,
      createTextVNode("里面, 使用 "),
      createBaseVNode("a", _hoisted_10, [
        createTextVNode("es 模块"),
        createVNode(_component_ExternalLinkIcon)
      ]),
      createTextVNode("开发")
    ]),
    _hoisted_11,
    createBaseVNode("blockquote", null, [
      createBaseVNode("p", null, [
        createTextVNode("具体配置可以查看官网配置 "),
        createBaseVNode("a", _hoisted_23, [
          createTextVNode("tsconfig.json 项目配置"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ])
    ]),
    _hoisted_24,
    createBaseVNode("ol", null, [
      createBaseVNode("li", null, [
        createTextVNode("安装"),
        _hoisted_39,
        createTextVNode("后通过"),
        _hoisted_40,
        createTextVNode("内置命令生成一份配置文件, 或者直接写一个"),
        _hoisted_41,
        createTextVNode("认识的文件, 具体格式请百度 这里选择了"),
        createBaseVNode("a", _hoisted_42, [
          createTextVNode("es 模块"),
          createVNode(_component_ExternalLinkIcon)
        ]),
        createTextVNode(", 所以使用"),
        _hoisted_43,
        createTextVNode("文件")
      ])
    ]),
    _hoisted_44,
    createBaseVNode("blockquote", null, [
      createBaseVNode("p", null, [
        createTextVNode("这里使用 "),
        createBaseVNode("a", _hoisted_94, [
          _hoisted_95,
          createVNode(_component_ExternalLinkIcon)
        ])
      ])
    ]),
    _hoisted_96,
    createBaseVNode("blockquote", null, [
      createBaseVNode("p", null, [
        createTextVNode("更多配置选项请查看"),
        createBaseVNode("a", _hoisted_101, [
          createTextVNode("相关配置"),
          createVNode(_component_ExternalLinkIcon)
        ])
      ])
    ]),
    _hoisted_102
  ]);
}
const index_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "index.html.vue"]]);
export {
  index_html as default
};
